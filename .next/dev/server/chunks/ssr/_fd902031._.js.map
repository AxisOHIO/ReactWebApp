{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/allam/Documents/Projects/AXIS/app/python-charts/page.js"],"sourcesContent":["'use client';\n\nimport { useState } from 'react';\n\nconst PythonChartsPage = () => {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [chartData, setChartData] = useState(null);\n  const [timeframe, setTimeframe] = useState(7);\n  const [plotType, setPlotType] = useState(true);\n\n  const generateChart = async () => {\n    setLoading(true);\n    setError(null);\n\n    try {\n      const res = await fetch('/api/python-chart', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ timeframe, plotType }),\n      });\n\n      if (res.ok) {\n        const data = await res.json();\n        setChartData(data);\n      } else {\n        const errorData = await res.json();\n        setError(errorData.error);\n      }\n    } catch (err) {\n      setError('Failed to generate chart');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen p-6 pt-24\">\n      <div className=\"max-w-4xl mx-auto\">\n        <div className={`liquid-glass rounded-2xl p-8 ${loading ? 'loading' : ''}`}>\n          <h1 className=\"text-2xl font-bold mb-4 text-white\">Python Generated Charts</h1>\n          <p className=\"text-white/80 mb-6\">Generate posture analysis charts using Python processing</p>\n          \n          <div className=\"space-y-4 mb-6\">\n            <div>\n              <label className=\"block text-sm font-medium text-white mb-2\">\n                Timeframe (days):\n              </label>\n              <select\n                value={timeframe}\n                onChange={(e) => setTimeframe(Number(e.target.value))}\n                className=\"inline-block p-2 bg-black border border-white/30 rounded text-white focus:ring-2 focus:ring-white/50 focus:border-white/50\"\n              >\n                <option value={7}>7 days</option>\n                <option value={14}>14 days</option>\n                <option value={30}>30 days</option>\n              </select>\n            </div>\n            \n            <div>\n              <label className=\"block text-sm font-medium text-white mb-2\">\n                Chart Type:\n              </label>\n              <div className=\"space-x-4\">\n                <label className=\"inline-flex items-center\">\n                  <input\n                    type=\"radio\"\n                    checked={plotType === true}\n                    onChange={() => setPlotType(true)}\n                    className=\"form-radio\"\n                  />\n                  <span className=\"ml-2 text-white\">Good/Bad Percentages</span>\n                </label>\n                <label className=\"inline-flex items-center\">\n                  <input\n                    type=\"radio\"\n                    checked={plotType === false}\n                    onChange={() => setPlotType(false)}\n                    className=\"form-radio\"\n                  />\n                  <span className=\"ml-2 text-white\">Bad Cause Analysis</span>\n                </label>\n              </div>\n            </div>\n          </div>\n\n          <button\n            onClick={generateChart}\n            disabled={loading}\n            className=\"w-full bg-blue-600 text-white py-3 px-4 rounded hover:bg-blue-700 disabled:bg-gray-400\"\n          >\n            {loading ? 'Generating Chart...' : 'Generate Python Chart'}\n          </button>\n\n          {error && (\n            <div className=\"mt-4 p-3 bg-red-50 border border-red-200 rounded\">\n              <p className=\"text-red-700\">{error}</p>\n            </div>\n          )}\n\n          {chartData && (\n            <div className=\"mt-6 text-center\">\n              <h2 className=\"text-lg font-semibold mb-3 text-white\">Generated Chart:</h2>\n              {chartData.image ? (\n                <img \n                  src={`data:image/png;base64,${chartData.image}`} \n                  alt=\"Python Generated Chart\"\n                  className=\"w-full border rounded\"\n                />\n              ) : (\n                <div className=\"bg-black/30 border border-white/20 p-4 rounded\">\n                  <pre className=\"text-sm overflow-auto text-white\">\n                    {JSON.stringify(chartData, null, 2)}\n                  </pre>\n                </div>\n              )}\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PythonChartsPage;"],"names":[],"mappings":";;;;;AAEA;AAFA;;;AAIA,MAAM,mBAAmB;IACvB,MAAM,CAAC,SAAS,WAAW,GAAG,IAAA,iNAAQ,EAAC;IACvC,MAAM,CAAC,OAAO,SAAS,GAAG,IAAA,iNAAQ,EAAC;IACnC,MAAM,CAAC,WAAW,aAAa,GAAG,IAAA,iNAAQ,EAAC;IAC3C,MAAM,CAAC,WAAW,aAAa,GAAG,IAAA,iNAAQ,EAAC;IAC3C,MAAM,CAAC,UAAU,YAAY,GAAG,IAAA,iNAAQ,EAAC;IAEzC,MAAM,gBAAgB;QACpB,WAAW;QACX,SAAS;QAET,IAAI;YACF,MAAM,MAAM,MAAM,MAAM,qBAAqB;gBAC3C,QAAQ;gBACR,SAAS;oBACP,gBAAgB;gBAClB;gBACA,MAAM,KAAK,SAAS,CAAC;oBAAE;oBAAW;gBAAS;YAC7C;YAEA,IAAI,IAAI,EAAE,EAAE;gBACV,MAAM,OAAO,MAAM,IAAI,IAAI;gBAC3B,aAAa;YACf,OAAO;gBACL,MAAM,YAAY,MAAM,IAAI,IAAI;gBAChC,SAAS,UAAU,KAAK;YAC1B;QACF,EAAE,OAAO,KAAK;YACZ,SAAS;QACX,SAAU;YACR,WAAW;QACb;IACF;IAEA,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAI,WAAU;sBACb,cAAA,8OAAC;gBAAI,WAAW,CAAC,6BAA6B,EAAE,UAAU,YAAY,IAAI;;kCACxE,8OAAC;wBAAG,WAAU;kCAAqC;;;;;;kCACnD,8OAAC;wBAAE,WAAU;kCAAqB;;;;;;kCAElC,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;;kDACC,8OAAC;wCAAM,WAAU;kDAA4C;;;;;;kDAG7D,8OAAC;wCACC,OAAO;wCACP,UAAU,CAAC,IAAM,aAAa,OAAO,EAAE,MAAM,CAAC,KAAK;wCACnD,WAAU;;0DAEV,8OAAC;gDAAO,OAAO;0DAAG;;;;;;0DAClB,8OAAC;gDAAO,OAAO;0DAAI;;;;;;0DACnB,8OAAC;gDAAO,OAAO;0DAAI;;;;;;;;;;;;;;;;;;0CAIvB,8OAAC;;kDACC,8OAAC;wCAAM,WAAU;kDAA4C;;;;;;kDAG7D,8OAAC;wCAAI,WAAU;;0DACb,8OAAC;gDAAM,WAAU;;kEACf,8OAAC;wDACC,MAAK;wDACL,SAAS,aAAa;wDACtB,UAAU,IAAM,YAAY;wDAC5B,WAAU;;;;;;kEAEZ,8OAAC;wDAAK,WAAU;kEAAkB;;;;;;;;;;;;0DAEpC,8OAAC;gDAAM,WAAU;;kEACf,8OAAC;wDACC,MAAK;wDACL,SAAS,aAAa;wDACtB,UAAU,IAAM,YAAY;wDAC5B,WAAU;;;;;;kEAEZ,8OAAC;wDAAK,WAAU;kEAAkB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kCAM1C,8OAAC;wBACC,SAAS;wBACT,UAAU;wBACV,WAAU;kCAET,UAAU,wBAAwB;;;;;;oBAGpC,uBACC,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC;4BAAE,WAAU;sCAAgB;;;;;;;;;;;oBAIhC,2BACC,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAG,WAAU;0CAAwC;;;;;;4BACrD,UAAU,KAAK,iBACd,8OAAC;gCACC,KAAK,CAAC,sBAAsB,EAAE,UAAU,KAAK,EAAE;gCAC/C,KAAI;gCACJ,WAAU;;;;;yFAGZ,8OAAC;gCAAI,WAAU;0CACb,cAAA,8OAAC;oCAAI,WAAU;8CACZ,KAAK,SAAS,CAAC,WAAW,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAUrD;uCAEe","debugId":null}},
    {"offset": {"line": 295, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/allam/Documents/Projects/AXIS/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react.ts"],"sourcesContent":["module.exports = (\n  require('../../module.compiled') as typeof import('../../module.compiled')\n).vendored['react-ssr']!.React\n"],"names":["module","exports","require","vendored","React"],"mappings":"AAAAA,OAAOC,OAAO,GACZC,QAAQ,4HACRC,QAAQ,CAAC,YAAY,CAAEC,KAAK","ignoreList":[0],"debugId":null}}]
}